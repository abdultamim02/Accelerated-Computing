#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cuda_runtime.h>
#include <cusolverDn.h>

double *HilbertMatrix(int n)
{
    double *H = new double[n * n];
    for (int i = 0; i < n; i++){
        for (int j = 0; j < n; j++){
            H[i * n + j] = (double)1.0 / ((i + 1) + (j + 1) - 1.0);
        }
    }
    return H;
}

double* PerturbedB(int n){
    double *b = new double[n];
    srand(time(0));

    for (int i = 0; i < n; i++){
        double epsilon = static_cast<double>(rand()) / RAND_MAX; // value between in
        if (epsilon == 0.0f){
            epsilon = 0.0001f; // ensure Îµ
        }
        b[i] = 1.0f + epsilon;
    }
    return b;
}

void PrintMatrix(double *H, int n) {
    printf("H[%d] =\n", n);
    for (int i = 0; i < n; i++) {
        printf("\t| ");
        for (int j = 0; j < n; j++) {
            printf("%.7f", H[i * n + j]);  // 7 decimal places                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
            if (j < n - 1) {
                printf(", ");
            }
        }
        printf(" |\n");
    }
}

void PrintB(double *b, int n) {
    printf("b[%d] = [\n", n);
    for (int i = 0; i < n; i++) {
        printf("\t%.7f", b[i]);  // 7 decimal places                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
        if (i < n - 1) {
            printf("\n");
        }
    }
    printf("\n\t]\n");
}

int main(int argc, char*argv[])
{
    int size = 10;
    int *n = new int[size];

    for (int i = 0; i < size; i++){
        n[i] = pow(2, (i + 1));
    }

    cusolverDnHandle_t cusolverH = NULL;
    cudaStream_t stream = NULL;

    cusolverStatus_t status = CUSOLVER_STATUS_SUCCESS;
    cudaError_t cudaStat1 = cudaSuccess;
    cudaError_t cudaStat2 = cudaSuccess;
    cudaError_t cudaStat3 = cudaSuccess;
    cudaError_t cudaStat4 = cudaSuccess;

    const int m = 4;
    const int lda = m;
    const int ldb = m;
    double *A = HilbertMatrix(m); // define coef. matrix in ***column*** order
    double *B = PerturbedB(m); // define

    PrintMatrix(A, m);
    printf("\n");
    PrintB(B, m);
    printf("\n");

    double X[m]; /* X = A\B */
    double LU[lda * m]; /* L and U */
    int Ipiv[m];      /* host copy of pivoting sequence */
    int info = 0;     /* host copy of error info */

    double *d_A = NULL; /* device copy of A */
    double *d_B = NULL; /* device copy of B */
    int *d_Ipiv = NULL; /* pivoting sequence */
    int *d_info = NULL; /* error info */
    int  lwork = 0;     /* size of workspace */
    double *d_work = NULL; /* device workspace for getrf */
    const int pivot_on = 0;

    /* step 1: create cusolver handle, bind a stream */
    status = cusolverDnCreate(&cusolverH);
    assert(CUSOLVER_STATUS_SUCCESS == status);

    cudaStat1 = cudaStreamCreateWithFlags(&stream, cudaStreamNonBlocking);
    assert(cudaSuccess == cudaStat1);

    status = cusolverDnSetStream(cusolverH, stream);
    assert(CUSOLVER_STATUS_SUCCESS == status);

    /* step 2: copy A to device */
    cudaStat1 = cudaMalloc ((void**)&d_A, sizeof(double) * lda * m);
    cudaStat2 = cudaMalloc ((void**)&d_B, sizeof(double) * m);
    cudaStat2 = cudaMalloc ((void**)&d_Ipiv, sizeof(int) * m);
    cudaStat4 = cudaMalloc ((void**)&d_info, sizeof(int));
    assert(cudaSuccess == cudaStat1);
    assert(cudaSuccess == cudaStat2);
    assert(cudaSuccess == cudaStat3);
    assert(cudaSuccess == cudaStat4);

    cudaStat1 = cudaMemcpy(d_A, A, sizeof(double) * lda * m, cudaMemcpyHostToDevice);
    cudaStat2 = cudaMemcpy(d_B, B, sizeof(double) * m, cudaMemcpyHostToDevice);
    assert(cudaSuccess == cudaStat1);
    assert(cudaSuccess == cudaStat2);

    /* step 3: query working space of getrf */
    status = cusolverDnDgetrf_bufferSize(
                                        cusolverH,  // [IN] cuSOLVER context/handle
                                        m,          // [IN] number of rows of A (mÃn
                                        m,          // [IN] number of columns of
                                        d_A,        // [IN] device pointer to matrix
                                        lda,        // [IN] leading dimension of
                                        &lwork      // [OUT] size of workspace in doubles
                                        );
    assert(CUSOLVER_STATUS_SUCCESS == status);

    cudaStat1 = cudaMalloc((void**)&d_work, sizeof(double) * lwork);
    assert(cudaSuccess == cudaStat1);

    /* step 4: LU factorization */
    if (pivot_on){
        status = cusolverDnDgetrf(
                                cusolverH,      // [IN] cuSOLVER context/handle
                                m,              // [IN] number of rows of A (mÃn
                                m,              // [IN] number of columns of
                                d_A,            // [IN] device pointer to matrix
                                lda,            // [IN] leading dimension of
                                d_work,         // [IN] device workspace
                                d_Ipiv,         // [OUT] pivoting sequence                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                                d_info          // [OUT] device pointer to error info
                            );
    }
    else {
        status = cusolverDnDgetrf(
                                cusolverH,      // [IN] cuSOLVER context/handle                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
                                m,              // [IN] number of rows of A (mÃn
                                m,              // [IN] number of columns of
                                d_A,            // [IN] device pointer to matrix
                                lda,            // [IN] leading dimension of
                                d_work,         // [IN] device workspace
                                NULL,           // [OUT] pivoting sequence                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                                d_info          // [OUT] device pointer to error info
                            );
    }
    cudaStat1 = cudaDeviceSynchronize();
    assert(CUSOLVER_STATUS_SUCCESS == status);
    assert(cudaSuccess == cudaStat1);

    if (pivot_on){
        cudaStat1 = cudaMemcpy(Ipiv , d_Ipiv, sizeof(int)*m, cudaMemcpyDeviceToHost);
    }
    cudaStat2 = cudaMemcpy(LU   , d_A   , sizeof(double)*lda*m, cudaMemcpyDeviceToHost);
    cudaStat3 = cudaMemcpy(&info, d_info, sizeof(int), cudaMemcpyDeviceToHost);
    assert(cudaSuccess == cudaStat1);
    assert(cudaSuccess == cudaStat2);
    assert(cudaSuccess == cudaStat3);

    if ( 0 > info ){
        printf("%d-th parameter is wrong \n", -info);
        exit(1);
    }
    if (pivot_on){
        printf("pivoting sequence, matlab base-1\n");
        for(int j = 0 ; j < m ; j++){
        printf("Ipiv(%d) = %d\n", j+1, Ipiv[j]);
        }
    }


    * step 5: solve
    */
    if (pivot_on){
        status = cusolverDnDgetrs(
                                cusolverH,      // [IN] cuSOLVER context/handle
                                CUBLAS_OP_N,    // [IN] operation on
                                m,              // [IN] number of rows of A (mÃn
                                1,              /* nrhs */
                                d_A,            // [IN] device pointer to matrix
                                lda,            // [IN] leading dimension of
                                d_Ipiv,         // [IN] pivoting sequence
                                d_B,            // [IN] device pointer to matrix
                                ldb,            // [IN] leading dimension of
                                d_info          // [OUT] device pointer to error info
                                );
    }
    else {
        status = cusolverDnDgetrs(
                                cusolverH,      // [IN] cuSOLVER context/handle
                                CUBLAS_OP_N,    // [IN] operation on
                                m,              // [IN] number of rows of A (mÃn
                                1,              /* nrhs */
                                d_A,            // [IN] device pointer to matrix
                                lda,            // [IN] leading dimension of A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                NULL,           // [IN] pivoting sequence
                                d_B,            // [IN] device pointer to matrix
                                ldb,            // [IN] leading dimension of
                                d_info          // [OUT] device pointer to error info
                            );
    }
    cudaStat1 = cudaDeviceSynchronize();
    assert(CUSOLVER_STATUS_SUCCESS == status);
    assert(cudaSuccess == cudaStat1);

    cudaStat1 = cudaMemcpy(X , d_B, sizeof(double) * m, cudaMemcpyDeviceToHost);
    assert(cudaSuccess == cudaStat1);

    printf("solution:\nx = [");
    for(int j = 0 ; j < m ; j++){
        printf(" %f ", X[j]);
    }
    printf("]'\n");

    /* free resources */
    if (d_A){
        cudaFree(d_A);
    }
    if (d_B){
        cudaFree(d_B);
    }
    if (d_Ipiv){
        cudaFree(d_Ipiv);
    }
    if (d_info){
        cudaFree(d_info);
    }
    if (d_work){
        cudaFree(d_work);
    }

    if (cusolverH){
        cusolverDnDestroy(cusolverH);
    }
    if (stream){
        cudaStreamDestroy(stream);
    }

    cudaDeviceReset(); // destroy context

    return 0;
}
